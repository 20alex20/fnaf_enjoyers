definitions:
  model.CreatePostRequest:
    properties:
      categories:
        items:
          type: string
        type: array
      filters:
        items:
          type: string
        type: array
      text:
        type: string
    type: object
  model.PostMain:
    properties:
      date_time:
        example: 2023.07.20 12:00
        type: string
      likes:
        example: 50
        type: integer
      text:
        example: Lorem ipsum
        type: string
      views:
        example: 100
        type: integer
    type: object
  model.PostUser:
    properties:
      date_time:
        example: 2023.07.20 12:00
        type: string
      id:
        example: 1
        type: integer
      likes:
        example: 50
        type: integer
      text:
        example: Lorem ipsum
        type: string
      views:
        example: 100
        type: integer
    type: object
info:
  contact: {}
paths:
  /main/posts:
    get:
      description: Gets posts on the main page
      parameters:
      - description: post category
        example: all
        in: query
        name: category
        required: true
        type: string
      - description: post filter
        example: without
        in: query
        name: filter
        required: true
        type: string
      - description: sort type
        example: date_time
        in: query
        name: sort
        required: true
        type: string
      - description: total number of posts to get
        example: 2
        in: query
        name: number
        required: true
        type: integer
      - description: page number
        example: 1
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PostMain'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Main page posts
      tags:
      - main
  /post/create:
    post:
      consumes:
      - application/json
      description: Creates post from current user
      parameters:
      - description: username
        example: '"John Doe"'
        in: query
        name: nickname
        required: true
        type: string
      - description: request body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PostUser'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create post
      tags:
      - post
  /post/get:
    get:
      description: Gets current user's posts
      parameters:
      - description: username
        example: '"John Doe"'
        in: query
        name: nickname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.PostUser'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: User posts
      tags:
      - post
swagger: "2.0"
